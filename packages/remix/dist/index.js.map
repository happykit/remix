{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { nanoid } from \"nanoid\";\nimport { parse } from \"cookie\";\n\n/**\n * Generic Feature Flags\n *\n * Entries consist of the feature flag name as the key and the resolved variant's value as the value.\n */\ntype Flags = {\n  // A flag can resolve to null when a percentage based rollout is set based\n  // on a criteria not present on the user, e.g. when bucketing by trait,\n  // but no such trait was sent\n  [key: string]: boolean | number | string | null;\n};\n\n/**\n * A user to load the flags for. A user must at least have a `key`. See the\n * supported user attributes [here](#supported-user-attributes).\n * The user information you pass can be used for individual targeting or rules.\n */\ntype FlagUser = {\n  key: string;\n  email?: string;\n  name?: string;\n  avatar?: string;\n  country?: string;\n};\n\n/**\n * Traits\n *\n * An object which you have access to in the flag's rules.\n * You can target users based on traits.\n */\ntype Traits = { [key: string]: any };\n\ntype EvaluationRequestBody = {\n  visitorKey: string | null;\n  user: FlagUser | null;\n  traits: Traits | null;\n};\n\n/**\n * Returns existing visitor key from cookie or generates a new one\n */\nexport function generateVisitorKey(request: Request) {\n  return parse(request.headers.get(\"Cookie\") ?? \"\")?.hkvk || nanoid();\n}\n\nexport async function getFlags<F extends Flags>(\n  options: {\n    visitorKey?: string;\n    user?: FlagUser;\n    traits?: Traits;\n  } = {}\n) {\n  const envKey = process.env.HAPPYKIT_FLAGS_ENV_KEY;\n  const flagEvaluationRequestBody: EvaluationRequestBody = {\n    visitorKey: options.visitorKey || null,\n    traits: options.traits || null,\n    user: options.user || null,\n  };\n\n  const flagBag = await fetch(`https://happykit.dev/api/flags/${envKey}`, {\n    method: \"POST\",\n    body: JSON.stringify(flagEvaluationRequestBody),\n  }).then<{\n    flags: F;\n    visitor: { key: string };\n  }>((res) => res.json());\n\n  return {\n    ...flagBag,\n    cookie: flagBag.visitor\n      ? {\n          \"Set-Cookie\": `hkvk=${encodeURIComponent(\n            flagBag.visitor.key\n          )}; Path=/; Max-Age=15552000; SameSite=Lax`,\n        }\n      : undefined,\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuB;AACvB,oBAAsB;AA4Cf,SAAS,mBAAmB,SAAkB;AA7CrD;AA8CE,WAAO,+BAAM,aAAQ,QAAQ,IAAI,QAAQ,MAA5B,YAAiC,EAAE,MAAzC,mBAA4C,aAAQ,sBAAO;AACpE;AAEA,SAAsB,WAMpB;AAAA,6CALA,UAII,CAAC,GACL;AACA,UAAM,SAAS,QAAQ,IAAI;AAC3B,UAAM,4BAAmD;AAAA,MACvD,YAAY,QAAQ,cAAc;AAAA,MAClC,QAAQ,QAAQ,UAAU;AAAA,MAC1B,MAAM,QAAQ,QAAQ;AAAA,IACxB;AAEA,UAAM,UAAU,MAAM,MAAM,kCAAkC,UAAU;AAAA,MACtE,QAAQ;AAAA,MACR,MAAM,KAAK,UAAU,yBAAyB;AAAA,IAChD,CAAC,EAAE,KAGA,CAAC,QAAQ,IAAI,KAAK,CAAC;AAEtB,WAAO,iCACF,UADE;AAAA,MAEL,QAAQ,QAAQ,UACZ;AAAA,QACE,cAAc,QAAQ;AAAA,UACpB,QAAQ,QAAQ;AAAA,QAClB;AAAA,MACF,IACA;AAAA,IACN;AAAA,EACF;AAAA;","names":[]}